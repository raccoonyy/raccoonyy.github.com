<!DOCTYPE html>
<html><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>conditional - raccoony's cave</title><description>Raccoony writes about programming, book and etc.</description><link>http://raccoonyy.github.io/</link><image><url>http://raccoonyy.github.io/favicon.png</url><title>conditional - raccoony's cave</title><link>http://raccoonyy.github.io/</link></image><generator>Ghost 1.21</generator><lastBuildDate>Wed, 28 Mar 2018 00:18:22 GMT</lastBuildDate><atom:link href="http://raccoonyy.github.io/tag/conditional/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>django 쿼리에 조건적 annotate 붙이기</title><description>Django 1.8에 추가된 Case, When을 사용하면, 특정 조건에 맞는 쿼리에 대해서만 aggregate나 annotate를 할 수 있습니다.</description><link>http://raccoonyy.github.io/conditional-annotate-with-django-query/</link><guid isPermaLink="false">59815cfcdd47a80001bb9ec7</guid><category>Django</category><category>query</category><category>conditional</category><category>annotate</category><category>case</category><category>F-expression</category><category>aggregation</category><dc:creator>raccoony</dc:creator><pubDate>Mon, 18 Jan 2016 23:02:00 GMT</pubDate><media:content url="http://raccoonyy.github.io/content/images/2016/01/conditional-1.jpg" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;h3 id=""&gt;문제&lt;/h3&gt;
&lt;blockquote&gt;
&lt;img src="http://raccoonyy.github.io/content/images/2016/01/conditional-1.jpg" alt="django 쿼리에 조건적 annotate 붙이기"&gt;&lt;p&gt;모델 코드는 &lt;a href="http://raccoonyy.github.io/conditional-annotate-with-django-query/.#modeling"&gt;제일 아래&lt;/a&gt;에 적어두었습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;특정 창고&lt;/code&gt;에서 &lt;code&gt;받은 발송장&lt;/code&gt;과 &lt;code&gt;보낸 발송장&lt;/code&gt;을 참고하여, &lt;code&gt;물건&lt;/code&gt;의 남은 양을 파악하고 싶었다. 다시 말하면, 조건에 맞춰서 &lt;code&gt;annotate&lt;/code&gt;를 만들 수 있을까?&lt;/p&gt;
&lt;p&gt;개인적으로는 가독성과 유지보수성을 위해 SQL보다는 django ORM을 선호하는 편이다. &lt;s&gt;그래서 복잡한 쿼리 만들 때마다 이런 고생을 하는지도&lt;/s&gt; &lt;code&gt;annotate&lt;/code&gt;랑 &lt;code&gt;F 표현식&lt;/code&gt;을 어떻게 조합하면 될 것도 같은데...하며 골머리를 싸매다가, 공식 문서에서 &lt;a href="https://docs.djangoproject.com/en/1.9/ref/models/conditional-expressions/"&gt;conditional expressions&lt;/a&gt;라는 항목을 발견했다.&lt;/p&gt;
&lt;h3 id="caseifelifelse"&gt;&lt;code&gt;Case&lt;/code&gt; == &lt;code&gt;if .. elif .. else&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;조건적인 &lt;code&gt;annotate&lt;/code&gt;에 사용하는 클래스는 &lt;code&gt;Case&lt;/code&gt;와 &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Case&lt;/code&gt;는 &lt;code&gt;if elif else&lt;/code&gt;랑 비슷하다고 볼 수 있다. 아래는 발송장(&lt;code&gt;Invoice&lt;/code&gt;)의 수신지(&lt;code&gt;dest&lt;/code&gt;)가 특정 창고(&lt;code&gt;inventory&lt;/code&gt;)인 경우(&lt;code&gt;When&lt;/code&gt;), 물품 목록(&lt;code&gt;stock_entry&lt;/code&gt;)에 포함된 물품의 개수(&lt;code&gt;quantity&lt;/code&gt;)를 가리킨다(=발송 개수). 해당되는 쿼리셋이 없다면 0을 반환한다(&lt;code&gt;default=0&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;from django.db.models import Case, When

Case(
    When(
        invoice__dest=inventory,
        then='stock_entry__quantity'
    ),
    default=0
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=""&gt;특정 창고에서 보낸 개수 파악하기&lt;/h3&gt;
&lt;p&gt;이 &lt;code&gt;Case&lt;/code&gt; 문을 실제 모델(&lt;code&gt;Stock&lt;/code&gt;) 객체에 붙여보자. 위의 &lt;code&gt;Case&lt;/code&gt; 문에 &lt;code&gt;Sum&lt;/code&gt; 객체를 덮은 후, &lt;code&gt;annotate&lt;/code&gt;를 사용하여 &lt;code&gt;Stock&lt;/code&gt; 객체에 붙였다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;stock_list = Stock.objects.annotate(
    received_stocks=Sum(
        Case(
            When(
                stock_entry__invoice__dest=inventory,
                then='stock_entry__quantity'
            ),
            default=Value(0)
        )
    ),
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이렇게 하면, &lt;code&gt;stock_list[0].received_stocks&lt;/code&gt;를 통해 각 물품의 보낸 개수를 확인할 수 있다.&lt;/p&gt;
&lt;h3 id=""&gt;특정 창고에서 받은 개수 확인하기&lt;/h3&gt;
&lt;p&gt;아래의 &lt;code&gt;sent_stocks&lt;/code&gt; 부분이 받은 개수를 연산하는 부분이다. (&lt;code&gt;dest&lt;/code&gt;가 &lt;code&gt;source&lt;/code&gt;로 바뀐 점 빼고는 &lt;code&gt;received&lt;/code&gt;와 똑같다.)&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;stock_list = Stock.objects.annotate(
    received_stocks=Sum(
        Case(
            When(
                stock_entry__invoice__dest=inventory,
                then='stock_entry__quantity'
            ),
            default=0
        )
    ),
    sent_stocks=Sum(
        Case(
            When(
                stock_entry__invoice__source=inventory,
                then='stock_entry__quantity'
            ),
            default=0
        )
    )
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;stock_list[0].sent_stocks&lt;/code&gt;를 통해 각 물품의 보낸 개수를 확인할 수 있다.&lt;/p&gt;
&lt;h3 id=""&gt;특정 창고에서 물품별 재고 파악하기&lt;/h3&gt;
&lt;p&gt;이제 각 객체에서 &lt;code&gt;received_stocks&lt;/code&gt; 값과 &lt;code&gt;sent_stocks&lt;/code&gt; 값을 연산하면 재고를 파악할 수 있다. (밑에서 세 번째 줄의 &lt;code&gt;annotate&lt;/code&gt; 구문)&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;stock_list = Stock.objects.annotate(
    received_stocks=Sum(
        Case(
            When(
                stock_entry__invoice__dest=inventory,
                then='stock_entry__quantity'
            ),
            default=0
        )
    ),
    sent_stocks=Sum(
        Case(
            When(
                stock_entry__invoice__source=inventory,
                then='stock_entry__quantity'
            ),
            default=0
        )
    )
).annotate(
    remains=F('received_stocks') - F('sent_stocks')
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;더 자세한 내용이 궁금하다면, 공식 문서의 &lt;a href="https://docs.djangoproject.com/en/1.9/ref/models/expressions/#f-expressions"&gt;F 표현식&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/1.9/ref/models/conditional-expressions/#case"&gt;Case 객체&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/1.9/ref/models/conditional-expressions/#conditional-aggregation"&gt;conditional aggregation&lt;/a&gt; 등을 참고하길 바란다.&lt;/p&gt;
&lt;h3 id=""&gt;&lt;a href="http://raccoonyy.github.io/conditional-annotate-with-django-query/./#modeling"&gt;참고용 소스&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;모델들이 어떻게 연결되어 있는지 궁금해 할 분도 있을 것 같아, 남겨본다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;class Inventory(models.Model):

    class Meta:
        verbose_name = &amp;quot;창고&amp;quot;

    title = models.CharField('이름', max_length=150)


class Invoice(TimeStampedModel):

    class Meta:
        verbose_name = &amp;quot;발송장&amp;quot;

    source = models.ForeignKey('Inventory', related_name='sent', null=True, blank=True)
    dest = models.ForeignKey('Inventory', related_name='received')


class StockEntry(models.Model):

    class Meta:
        verbose_name = &amp;quot;적재 내용&amp;quot;

    invoice = models.ForeignKey('Invoice', related_name='stock_entry', null=True)
    stock = models.ForeignKey('Stock', related_name='stock_entry')
    quantity = models.IntegerField('수량')


class Stock(models.Model):

    class Meta:
        verbose_name = &amp;quot;물품&amp;quot;

    title = models.CharField('이름', max_length=150, unique=True)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content:encoded></item></channel></rss></html>