<!DOCTYPE html>
<html><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>django-debug-toolbar - raccoony's cave</title><description>Raccoony writes about programming, book and etc.</description><link>http://raccoonyy.github.io/</link><image><url>http://raccoonyy.github.io/favicon.png</url><title>django-debug-toolbar - raccoony's cave</title><link>http://raccoonyy.github.io/</link></image><generator>Ghost 2.19</generator><lastBuildDate>Tue, 09 Apr 2019 21:39:57 GMT</lastBuildDate><atom:link href="http://raccoonyy.github.io/tag/django-debug-toolbar/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>[RFDP] django-debug-toolbar</title><description>django로 만든 웹페이지에서 SQL 쿼리, request, header 등을 확인할 수 있는 플러그인입니다.</description><link>http://raccoonyy.github.io/django-debug-toolbar/</link><guid isPermaLink="false">59815cfbdd47a80001bb9ea9</guid><category>Django</category><category>django plugins</category><category>django-debug-toolbar</category><category>raccoonys favorite</category><dc:creator>raccoony</dc:creator><pubDate>Thu, 02 Apr 2015 02:18:00 GMT</pubDate><media:content url="http://raccoonyy.github.io/content/images/2016/06/raccoonys_favorite_django_plugins.jpg" medium="image"/><content:encoded>&lt;blockquote&gt;
&lt;img src="http://raccoonyy.github.io/content/images/2016/06/raccoonys_favorite_django_plugins.jpg" alt="[RFDP] django-debug-toolbar"&gt;&lt;p&gt;RFDP : Raccoony's Favorite Django Plugins&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;오늘 소개할 플러그인은 Django 개발하는 분들이라면 모르는 분이 없을 django-debug-toolbar입니다.&lt;/p&gt;
&lt;p&gt;플러그인 이름 : django-debug-toolbar&lt;/p&gt;
&lt;p&gt;저장소 : &lt;a href="https://github.com/django-debug-toolbar/"&gt;https://github.com/django-debug-toolbar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;공식 문서 : &lt;a href="http://django-debug-toolbar.readthedocs.org/"&gt;http://django-debug-toolbar.readthedocs.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=""&gt;쓰임새&lt;/h2&gt;
&lt;p&gt;django로 만든 웹페이지에서 SQL 쿼리, request, header 등을 확인할 수 있습니다.&lt;/p&gt;
&lt;h2 id=""&gt;설치&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install django-debug-toolbar
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=""&gt;설정&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;에는 &lt;code&gt;debug_toolbar&lt;/code&gt; 뿐만 아니라 &lt;code&gt;django.contrib.staticfiles&lt;/code&gt;도 꼭 넣어주셔야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;INSTALLED_APPS = (
    # ...
    'django.contrib.staticfiles',
    # ...
    'debug_toolbar',
)

MIDDLEWARE_CLASSES = (
    # ...
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # ...
)

INTERNAL_IPS = ('127.0.0.1', )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Django 1.7부터는 settings.py에 &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt;가 없을 텐데요. 기본 미들웨어 없이 아래와 같이 설정해도 잘 작동합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;MIDDLEWARE_CLASSES = (
    'debug_toolbar.middleware.DebugToolbarMiddleware',
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;urls.py 파일에는 다음과 같은 코드를 맨 아래 추가합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;if settings.DEBUG:
    import debug_toolbar
    urlpatterns.append(
        url(r'^__debug__/', include(debug_toolbar.urls)))
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;로컬 서버에서 웹페이지 오른쪽에 DJDT라고 써있는 반투명한 버튼이 보이면 설치에 성공한 겁니다.&lt;/p&gt;
&lt;h2 id=""&gt;각 패널의 기능&lt;/h2&gt;
&lt;p&gt;웹페이지 오른쪽의 DJDT 버튼을 누르면 여러 패널이 나타나는데요. 각 패널이 담고 있는 정보는 다음과 같습니다.&lt;/p&gt;
&lt;h3 id="version"&gt;Version&lt;/h3&gt;
&lt;p&gt;파이썬, Django 외에도 pip로 설치한 앱들의 버전을 알려줍니다.&lt;/p&gt;
&lt;h3 id="time"&gt;Time&lt;/h3&gt;
&lt;p&gt;응답하기까지 걸린 시간&lt;/p&gt;
&lt;h3 id="settings"&gt;Settings&lt;/h3&gt;
&lt;p&gt;settings.py의 설정들을 보여줍니다.&lt;/p&gt;
&lt;h3 id="headers"&gt;Headers&lt;/h3&gt;
&lt;p&gt;HTTP 요청과 응답의 헤더 값을 보여줍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt; 설정시 debug_toolbar 아래 쪽에 추가한 미들웨어들의 값은 보이지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="request"&gt;Request&lt;/h3&gt;
&lt;p&gt;GET이나 POST, 쿠키, 세션 등의 값을 보여줍니다.&lt;/p&gt;
&lt;h3 id="sql"&gt;SQL&lt;/h3&gt;
&lt;p&gt;SQL 쿼리와 처리 시간을 알려줍니다.&lt;/p&gt;
&lt;h3 id="staticfiles"&gt;Static files&lt;/h3&gt;
&lt;p&gt;사용된 스태틱 파일과 위치를 알려줍니다.&lt;/p&gt;
&lt;h3 id="template"&gt;Template&lt;/h3&gt;
&lt;p&gt;어떤 템플릿 파일을 사용했는지, 이때 context의 값은 어떤지를 보여줍니다.&lt;/p&gt;
&lt;h3 id="cache"&gt;Cache&lt;/h3&gt;
&lt;p&gt;캐시를 사용했다면 그 내용을 보여줍니다.&lt;/p&gt;
&lt;h3 id="signal"&gt;Signal&lt;/h3&gt;
&lt;p&gt;시그널과 전달인자, 리시버를 알려줍니다.&lt;/p&gt;
&lt;h3 id="logging"&gt;Logging&lt;/h3&gt;
&lt;p&gt;파이썬 내장 로깅 모듈을 사용했을 때의 출력 로그를 보여줍니다.&lt;/p&gt;
&lt;h3 id="interceptredirects"&gt;Intercept Redirects&lt;/h3&gt;
&lt;p&gt;다른 페이지로 리디렉트하는 경우, 이를 가로막고 알려줍니다.&lt;/p&gt;
</content:encoded></item></channel></rss></html>