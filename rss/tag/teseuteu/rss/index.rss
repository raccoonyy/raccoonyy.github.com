<!DOCTYPE html>
<html><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>테스트 - raccoony's cave</title><description>Raccoony writes about programming, book and etc.</description><link>http://raccoonyy.github.io/</link><image><url>http://raccoonyy.github.io/favicon.png</url><title>테스트 - raccoony's cave</title><link>http://raccoonyy.github.io/</link></image><generator>Ghost 1.21</generator><lastBuildDate>Wed, 28 Mar 2018 00:18:32 GMT</lastBuildDate><atom:link href="http://raccoonyy.github.io/tag/teseuteu/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>한국의 파이썬 소식(2017년 3월 둘째 주)</title><description>한국에서 일어나는 파이썬 관련 소식을 전합니다. #1 파이썬에서 GIL이 왜 문제인가요? #2 RESTful API를 테스트합시다 #3 테스트 코드에도 종류가 있다 #4 Selenium의 xpath #5 크롤러 제작 후기 #6 (구인) 통로이미지 경력직 파이썬 개발자</description><link>http://raccoonyy.github.io/python-news-for-korean-2017-2nd-week-mar/</link><guid isPermaLink="false">59815cfcdd47a80001bb9f17</guid><category>파이썬 소식</category><category>python-news</category><category>테스트</category><category>Python GIL</category><category>RESTful API</category><category>Selenium</category><category>Xpath</category><category>통로이미지</category><dc:creator>raccoony</dc:creator><pubDate>Tue, 14 Mar 2017 01:18:00 GMT</pubDate><media:content url="http://raccoonyy.github.io/content/images/2017/01/python-news-for-korean-cover-2017.jpg" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;blockquote&gt;
&lt;img src="http://raccoonyy.github.io/content/images/2017/01/python-news-for-korean-cover-2017.jpg" alt="한국의 파이썬 소식(2017년 3월 둘째 주)"&gt;&lt;p&gt;한국에서 일어나는 파이썬 관련 소식을 전합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=""&gt;블로그&lt;/h1&gt;
&lt;h3 id="pythongilbyhansmj"&gt;&lt;a href="https://medium.com/@mjhans83/python-gil-f940eac0bef9#.n2jlpq17j"&gt;Python GIL&lt;/a&gt; by hans mj님&lt;/h3&gt;
&lt;p&gt;파이썬 성능 저하의 원인으로 자주 지목되는 GIL(Global Interpreter Lock)이 무엇이고, 실제 성능은 어떤지에 대해 hans mj님이 설명하였습니다.&lt;/p&gt;
&lt;h3 id="restfulapibydittokim"&gt;&lt;a href="http://blog.sapzil.org/2017/03/12/testing-restful-api-servers/"&gt;RESTful API 서버 테스트하기&lt;/a&gt; by Ditto Kim 님&lt;/h3&gt;
&lt;p&gt;RESTful API의 테스트를 작성하는 방법을 Ditto님이 간략히 정리하였습니다.&lt;/p&gt;
&lt;h3 id="byagile"&gt;&lt;a href="https://steemit.com/programming/@agile/6tx4g7"&gt;테스트 코드의 여러가지 유형&lt;/a&gt; by agile님&lt;/h3&gt;
&lt;p&gt;테스트 코드의 여러 유형과 각 유형이 담당하는 역할에 대해 agile님이 예시 코드로 설명하였습니다.&lt;/p&gt;
&lt;h3 id="seleniumxpathbyjang"&gt;&lt;a href="https://wkdtjsgur100.github.io/blog/2017/03/05/selenium-xpath/"&gt;selenium에서 xpath를 이용해 크롤링 하기&lt;/a&gt; by Jang님&lt;/h3&gt;
&lt;p&gt;Selenium에서 특정 엘리먼트를 가져오는 xpath의 활용법을 Jang님이 간략하게 정리하였습니다.&lt;/p&gt;
&lt;h3 id="seleniumbypeteryun"&gt;&lt;a href="https://medium.com/@peteryun/python-selenium%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%81%AC%EB%A1%A4%EB%9F%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-b055cefd1195#.kv4ck3egz"&gt;Selenium을 활용한 크롤러 제작 후기&lt;/a&gt; by peter yun님&lt;/h3&gt;
&lt;p&gt;1965년부터 2016년까지의 빌보드 1위부터 100위까지의 곡에 대해 작사/곡자와 프로듀서, 발매년도 등을 크롤링하는 과정을 peter yun님이 정리하였습니다.&lt;/p&gt;
&lt;h1 id=""&gt;구인&lt;/h1&gt;
&lt;h3 id=""&gt;&lt;a href="http://www.jobkorea.co.kr/Recruit/GI_Read/20380807?Oem_Code=C1"&gt;통로이미지 경력 서버 개발자&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://clipartkorea.co.kr"&gt;클립아트코리아&lt;/a&gt;와 &lt;a href="http://www.imagetoday.co.kr/"&gt;이미지투데이&lt;/a&gt;를 운영하는 (주)통로이미지에서 경력 3년 이상의 파이썬 개발자를 모집합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;접수기간: 3월 24일 24시까지&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content:encoded></item><item><title>한국의 파이썬 소식(3월 넷째 주)</title><description>한국에서 일어나는 파이썬 관련 소식을 전합니다. #1 테스트 코드랑 코딩하기 #2 부동산다이렉트 구인 #3 레이니스트 구인 #4 캡슐코퍼레이션 구인</description><link>http://raccoonyy.github.io/python-news-for-korean-4th-week-mar/</link><guid isPermaLink="false">59815cfcdd47a80001bb9ed2</guid><category>python</category><category>python-news</category><category>파이썬</category><category>파이썬 소식</category><category>테스트</category><category>부동산다이렉트</category><category>레이니스트</category><category>캡슐코퍼레이션</category><dc:creator>raccoony</dc:creator><pubDate>Mon, 21 Mar 2016 00:48:18 GMT</pubDate><media:content url="http://raccoonyy.github.io/content/images/2016/01/IMG_0005.jpg" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;blockquote&gt;
&lt;img src="http://raccoonyy.github.io/content/images/2016/01/IMG_0005.jpg" alt="한국의 파이썬 소식(3월 넷째 주)"&gt;&lt;p&gt;한국에서 일어나는 파이썬 관련 소식을 전합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=""&gt;블로그&lt;/h1&gt;
&lt;h3 id="byitem"&gt;&lt;a href="https://item4.github.io/2016-03-19/Coding-with-Test-Code/"&gt;테스트 코드랑 코딩하기&lt;/a&gt; by item님&lt;/h3&gt;
&lt;p&gt;테스트를 작성해서 얻을 수 있는 이점을 item님이 간단한 예로 설명해줍니다.&lt;/p&gt;
&lt;h1 id=""&gt;구인&lt;/h1&gt;
&lt;h3 id=""&gt;&lt;a href="https://www.facebook.com/hannal/posts/10154091532908623"&gt;부동산다이렉트&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;r.square를 서비스하는 부동산다이렉트에서 파이썬 개발자를 모집합니다.&lt;/p&gt;
&lt;p&gt;(페이스북 글을 읽지 못할 분도 계실 듯 하여 캡처 화면을 아래에 올립니다.)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://raccoonyy.github.io/content/images/2016/03/Screenshot-2016-03-21-09-51-26.png" alt="한국의 파이썬 소식(3월 넷째 주)"&gt;&lt;/p&gt;
&lt;h3 id=""&gt;&lt;a href="https://www.rocketpunch.com/jobs/10949/%EB%8D%95%EC%97%85%EC%9D%BC%EC%B9%98-%EC%9B%B9%EC%84%9C%EB%B2%84iOS-%EA%B0%9C%EB%B0%9C%EC%9E%90"&gt;캡슐코퍼레이션&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;덕업일치를 지향하는 캡슐코퍼레이션에서 웹 서비스 개발자를 모집합니다. (Django 경험자도 환영한다고 하네요.)&lt;/p&gt;
&lt;/div&gt;</content:encoded></item><item><title>테스트용 객체 생성을 편하게 - model_mommy</title><description>django에서 테스트용 객체를 생성하기가 좀 귀찮았다. 테스트 픽스처를 만들기도 귀찮았다. 그냥 더미 객체들 좀 알아서 만들어주면 안 되나? model_mommy 도입으로 해결!</description><link>http://raccoonyy.github.io/generating-dynamic-test-fixture-with-model_mommy/</link><guid isPermaLink="false">59815cfbdd47a80001bb9ea8</guid><category>test</category><category>파이썬</category><category>Django</category><category>django-test</category><category>model_mommy</category><category>테스트</category><dc:creator>raccoony</dc:creator><pubDate>Tue, 26 Jan 2016 23:21:53 GMT</pubDate><media:content url="http://raccoonyy.github.io/content/images/2016/01/model_mommy.jpg" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;img src="http://raccoonyy.github.io/content/images/2016/01/model_mommy.jpg" alt="테스트용 객체 생성을 편하게 - model_mommy"&gt;&lt;p&gt;개인적으로 테스트를 작성하면서 귀찮다고 여겼던 부분 중 하나는 테스트용 데이터(테스트 픽스처) 구축이었다. Django에서 테스트 전에 테스트 픽스처를 불러들이는 기능을 제공하지만, 이걸 만드는 일 자체가 귀찮기도 하고 어떤 데이터인지 확인하려면 json 파일을 열어봐야 하니까.&lt;/p&gt;
&lt;p&gt;그러던 중에 &lt;strong&gt;Object Factory&lt;/strong&gt;라는 도구를 알게 되었다. 여러 가지가 있지만(대표적으론 &lt;a href="https://factoryboy.readthedocs.org/en/latest/"&gt;Factory Boy&lt;/a&gt;) 가장 간단해서 사용하게 된 &lt;a href="http://model-mommy.readthedocs.org/"&gt;model_mommy&lt;/a&gt;를 소개해볼까 한다.&lt;/p&gt;
&lt;h2 id=""&gt;설치&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pip install model_mommy
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=""&gt;테스트용 객체 만들기&lt;/h2&gt;
&lt;p&gt;다음과 같은 Author 모델이 있다고 하자.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;# models.py
class Author(models.Model):
    name = models.CharField(max_length=35)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이제 model_mommy를 사용하여 테스트용 객체를 만들 수 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;# test_models.py
from django.test import TestCase
from model_mommy import mommy

class TestAuthor(TestCase):
    def setUp(self):
        self.author = mommy.make('Author')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이때 Author 모델의 name 속성은 임의의 글자 35개(&lt;code&gt;max_length=35&lt;/code&gt;)로 생성되는데, 이를 직접 지정할 수도 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;self.author = mommy.make(
    'Author', 
    name='test_name'
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=""&gt;외부키 연결&lt;/h2&gt;
&lt;p&gt;이제 &lt;code&gt;models.py&lt;/code&gt;에 Book 모델을 추가하고, Author 모델과 연결했다고 하자.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;# models.py
class Book(models.Model):
    title = models.CharField(max_length=150)
    author = models.ForeignKey('Author')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그리고 테스트에서 특정 Author 객체와 연결된 Book 모델을 만들고 싶다면,&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;# test_models.py
# ... (생략) ...
class TestBook(TestCase):
    def setUp(self):
        self.author = mommy.make('Author')
        self.book = mommy.make('Book', author=self.author)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;연결된 모델의 속성도 지정할 수 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;self.book = mommy.make(
    'Book',
    author__name='test_related_name'
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=""&gt;한꺼번에 여러 객체 만들기&lt;/h3&gt;
&lt;p&gt;객체를 한꺼번에 하나 이상 만들고 싶다면,&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;books = mommy.make(
    'Book',
    _quantity=100
)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;너무 많이 만들면(10,000개 이상?) 테스트 실행 시간도 늘어난다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 외에도 &lt;a href="http://model-mommy.readthedocs.org/en/latest/recipes.html"&gt;Recipe&lt;/a&gt;를 만들어 두고 재활용하거나, 만드는 순서에 따라 번호를 매기는 &lt;a href="http://model-mommy.readthedocs.org/en/latest/recipes.html#sequences-in-recipes"&gt;Sequence&lt;/a&gt; 등의 기능도 있으니 참고하길.&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss></html>